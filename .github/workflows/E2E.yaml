name: 'MW UI V3 - E2E'

on:
  workflow_dispatch:

jobs:
  automatic-deploy:
    name: Automatické nasazení do MW Serveru Německo
    runs-on: Ubuntu-latest
    environment: CI
    needs: [browser-edge,browser-firefox,browser-chrome]
    steps:
      - name: Poslat informace o dokončení CI a provést automatické nasazení aplikace
        uses: Glennmen/ploi-deploy-action@v1.2.0
        with:
          webhook_url: ${{ secrets.PLOI_WEBHOOK }}
  browser-edge:
    name: Testování MW UI na Edge
    runs-on: Ubuntu-latest
    env:
       APP_ENV: CI
       DB_CONNECTION: mysql
       DB_HOST: 127.0.0.1
       DB_PORT: 3306
       DB_DATABASE: testing
       DB_USERNAME: root
       APP_URL: 'http://host.docker.internal:8000'
       SELENIUM_URL: 'http://127.0.0.1:4444'
       BROWSER_TEST: 'edge'
       EXTENSIONS: opcache,bcmath,ctype,curl,dom,fileinfo,json,mbstring,openssl,pcre,pdo_mysql,tokenizer,xml
       INI_VALUES: opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M
       TOOLS: -phpunit,phpcs,composer,xdebug
       KEY_PHP: composer
    needs: install-linux
    services:
      selenium:
        image: selenium/standalone-edge
        volumes:
          - /dev/shm:/dev/shm
        ports:
          - 4444:4444
        options: --shm-size="2g" --add-host="host.docker.internal:host-gateway"
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MARIADB_DATABASE: testing
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
    steps:
      - name: Stahování kódu ze repository
        uses: actions/checkout@v3.3.0

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: '8.2'
          extensions: ${{ env.EXTENSIONS }}
          key: ${{ env.KEY_PHP }}

      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Instalace PHP & composeru with JIT
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: ${{ env.TOOLS }}
          ini-values: ${{ env.INI_VALUES }}
          extensions: ${{ env.EXTENSIONS }}

      - name: Instalace composer vendoru
        run: composer install --prefer-dist --dev --no-progress --optimize-autoloader

      - name: Instalace NodeJS
        uses: actions/setup-node@v3
        id: node
        with:
          node-version: 19
          cache: 'yarn'

      - name: Instalace node_modules
        if: steps.node.cache-hit != 'true'
        run: yarn install

      - name: Kopírování CI env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Vygenerování klíče
        run: php artisan key:generate

      - name: Stažení InertiaJS SSR
        uses: actions/download-artifact@v3.0.2
        with:
          name: MWUI-SSR
          path: bootstrap/ssr

      - name: Stažení MW UI
        uses: actions/download-artifact@v3.0.2
        with:
          name: MWUI
          path: public/build

      - name: Příprava databáze
        run: php artisan migrate
        
      - name: Spuštění SSR
        run: php artisan inertia:start-ssr &
        
      - name: Spuštění Serveru
        run: php artisan serve --host 0.0.0.0 --no-reload &
        
      - name: Spuštění testování E2E pomocí Laravel dusk & PestPHP
        run: php artisan pest:dusk

      - name: Upload Images
        uses: actions/upload-artifact@v3.1.2
        with:
          name: screenshots-edge
          path: tests/Browser/screenshots
          
  browser-firefox:
    name: Testování MW UI na Firefox
    runs-on: Ubuntu-latest
    env:
       APP_ENV: CI
       DB_CONNECTION: mysql
       DB_HOST: 127.0.0.1
       DB_PORT: 3306
       DB_DATABASE: testing
       DB_USERNAME: root
       APP_URL: 'http://host.docker.internal:8000'
       SELENIUM_URL: 'http://127.0.0.1:4444'
       BROWSER_TEST: 'firefox'
       EXTENSIONS: opcache,bcmath,ctype,curl,dom,fileinfo,json,mbstring,openssl,pcre,pdo_mysql,tokenizer,xml
       INI_VALUES: opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M
       TOOLS: -phpunit,phpcs,composer,xdebug
       KEY_PHP: composer
    needs: install-linux
    services:
      selenium:
        image: selenium/standalone-firefox
        volumes:
          - /dev/shm:/dev/shm
        ports:
          - 4444:4444
        options: --shm-size="2g" --add-host="host.docker.internal:host-gateway"
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MARIADB_DATABASE: testing
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
    steps:
      - name: Stahování kódu ze repository
        uses: actions/checkout@v3.3.0

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: '8.2'
          extensions: ${{ env.EXTENSIONS }}
          key: ${{ env.KEY_PHP }}

      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Instalace PHP & composeru with JIT
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: ${{ env.TOOLS }}
          ini-values: ${{ env.INI_VALUES }}
          extensions: ${{ env.EXTENSIONS }}

      - name: Instalace composer vendoru
        run: composer install --prefer-dist --dev --no-progress --optimize-autoloader

      - name: Instalace NodeJS
        uses: actions/setup-node@v3
        id: node
        with:
          node-version: 19
          cache: 'yarn'

      - name: Instalace node_modules
        if: steps.node.cache-hit != 'true'
        run: yarn install

      - name: Kopírování CI env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Vygenerování klíče
        run: php artisan key:generate

      - name: Stažení InertiaJS SSR
        uses: actions/download-artifact@v3.0.2
        with:
          name: MWUI-SSR
          path: bootstrap/ssr

      - name: Stažení MW UI
        uses: actions/download-artifact@v3.0.2
        with:
          name: MWUI
          path: public/build

      - name: Příprava databáze
        run: php artisan migrate
        
      - name: Spuštění SSR
        run: php artisan inertia:start-ssr &
        
      - name: Spuštění Serveru
        run: php artisan serve --host 0.0.0.0 --no-reload &
        
      - name: Spuštění testování E2E pomocí Laravel dusk & PestPHP
        run: php artisan pest:dusk

      - name: Upload Images
        uses: actions/upload-artifact@v3.1.2
        with:
          name: screenshots-firefox
          path: tests/Browser/screenshots
          
  browser-chrome:
    name: Testování MW UI na Chrome & based Chromium browser
    runs-on: Ubuntu-latest
    env:
       APP_ENV: CI
       DB_CONNECTION: mysql
       DB_HOST: 127.0.0.1
       DB_PORT: 3306
       DB_DATABASE: testing
       DB_USERNAME: root
       APP_URL: 'http://host.docker.internal:8000'
       SELENIUM_URL: 'http://127.0.0.1:4444'
       BROWSER_TEST: 'chrome'
       EXTENSIONS: opcache,bcmath,ctype,curl,dom,fileinfo,json,mbstring,openssl,pcre,pdo_mysql,tokenizer,xml
       INI_VALUES: opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M
       TOOLS: -phpunit,phpcs,composer,xdebug
       KEY_PHP: composer
    needs: install-linux
    services:
      selenium:
        image: selenium/standalone-chrome
        volumes:
          - /dev/shm:/dev/shm
        ports:
          - 4444:4444
        options: --shm-size="2g" --add-host="host.docker.internal:host-gateway"
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        env:
          MARIADB_DATABASE: testing
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: true
    steps:
      - name: Stahování kódu ze repository
        uses: actions/checkout@v3.3.0

      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: '8.2'
          extensions: ${{ env.EXTENSIONS }}
          key: ${{ env.KEY_PHP }}

      - name: Cache extensions
        uses: actions/cache@v3
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Instalace PHP & composeru with JIT
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: ${{ env.TOOLS }}
          ini-values: ${{ env.INI_VALUES }}
          extensions: ${{ env.EXTENSIONS }}
          
      - name: Instalace composer vendoru
        run: composer install --prefer-dist --dev --no-progress --optimize-autoloader

      - name: Instalace NodeJS
        uses: actions/setup-node@v3
        id: node
        with:
          node-version: 19
          cache: 'yarn'

      - name: Instalace node_modules
        if: steps.node.cache-hit != 'true'
        run: yarn install

      - name: Kopírování CI env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Vygenerování klíče
        run: php artisan key:generate

      - name: Stažení InertiaJS SSR
        uses: actions/download-artifact@v3.0.2
        with:
          name: MWUI-SSR
          path: bootstrap/ssr

      - name: Stažení MW UI
        uses: actions/download-artifact@v3.0.2
        with:
          name: MWUI
          path: public/build

      - name: Příprava databáze
        run: php artisan migrate
        
      - name: Spuštění SSR
        run: php artisan inertia:start-ssr &
        
      - name: Spuštění Serveru
        run: php artisan serve --host 0.0.0.0 --no-reload &
        
      - name: Spuštění testování E2E pomocí Laravel dusk & PestPHP
        run: php artisan pest:dusk

      - name: Upload Images
        uses: actions/upload-artifact@v3.1.2
        with:
          name: screenshots-chrome
          path: tests/Browser/screenshots


  install-linux:
    name: Instalace & sestavení aplikace na linuxu
    runs-on: ubuntu-latest
    steps:
      - name: Stahování kódu ze repository
        uses: actions/checkout@v3.3.0

      - name: Instalace NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 19.4.0
          
      - name: Cache node_modules
        id: node-cache
        uses: actions/cache@v3.2.3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

      - name: Instalace node_modules
        if: steps.node-cache.cache-hit != 'true'
        run: yarn install

      - name: Sestavení aplikace MW UI
        run: yarn build

      - name: Upload sestaveného UI pro ostatní úkony
        uses: actions/upload-artifact@v3.1.2
        with:
          name: MWUI
          path: public/build

      - name: Upload SSR
        uses: actions/upload-artifact@v3.1.2
        with:
          name: MWUI-SSR
          path: bootstrap/ssr
